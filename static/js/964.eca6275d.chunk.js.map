{"version":3,"file":"static/js/964.eca6275d.chunk.js","mappings":"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","sources":["components/TrendListItem/styled.js","components/TrendListItem/TrendListItem.jsx","components/TrendList/styled.js","components/TrendList/TrendList.jsx","components/services/Api/getFilms.js","pages/MoviePage/styled.js","components/SearchBar/styled.js","components/SearchBar/SearchBar.jsx","pages/MoviePage/MoviesPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Title = styled.p`\ncolor: white;\nfont-size: 25px;\n`;","import PropTypes from 'prop-types';\nimport { contentURL } from 'components/services/Api/getFilms';\nimport { Poster, Title } from './styled';\n\nexport const TrendListItem = ({ film }) => {\n    const { title, poster_path } = film;\n    return (\n        <>\n            <Poster\n                src={\n                    poster_path\n                        ? contentURL + poster_path\n                        : 'https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg'\n                }\n                alt={title}\n            />\n            <Title>{title}</Title>\n        </>\n    );\n};\n\nTrendListItem.propTypes = {\n    film: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string,\n    }),\n}.isRequired;","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieList = styled.ul`\ngap: 30px;\npadding: 30px;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  box-shadow: 1px 7px 63px 0px rgba(0,0,0,0.75);\n`;\n\nexport const IdLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(48,29,145,0.55);\n  border-radius: 7px;\n  box-shadow: 1px 7px 63px 0px rgba(0,0,0,0.75);\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\nimport { TrendListItem } from \"components/TrendListItem/TrendListItem\";\nimport { ListItem, MovieList, IdLink } from \"./styled\";\n\nexport const TrendFilms = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <>\n            {movies?.length > 0 && (\n                <MovieList>\n                    {movies.map(film => (\n                        <ListItem key={film.id}>\n                            <IdLink to={`/movie/${film.id}`} state={{ from: location }}>\n                                <TrendListItem film={film} />\n                            </IdLink>\n                        </ListItem>\n                    ))}\n                </MovieList>\n            )}\n        </>\n    );\n};\n\nTrendFilms.propTypes = {\n    movies: PropTypes.array,\n};\n","import axios from \"axios\";\n\nconst KEY = '915249618afd956764505d155ff11f97';\nconst LANGUAGE = 'uk';\n\nexport const contentURL = `https://image.tmdb.org/t/p/w500`;\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function getTrendFilms(page = 1) {\n    try {\n        const data = await instance.get(\n            `/trending/movie/week?api_key=${KEY}&page=${page}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFindFilm(searchQ, page = 1) {\n    try {\n        const data = await instance.get(\n            `/search/movie?api_key=${KEY}&query=${searchQ}&page=${page}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFilmInfo(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}?api_key=${KEY}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error)\n    }\n};\n\nexport async function getFilmCredits(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}/credits?api_key=${KEY}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFilmReviews(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}/reviews?api_key=${KEY}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n}","import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\nbackground-image: linear-gradient(225deg, rgb(105, 113, 211) 0%, rgb(120, 75, 160) 50%, rgb(42, 120, 171) 100%);\nwidth: 100%;\nmin-height: 100vh;\nflex-direction: column;\ndisplay: flex;\nalign-items: center;\n`;\n\nexport const TrendList = styled.ul`\ngap: 30px;\npadding: 30px;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 600px;\nbackground-color: #fff;\nborder-radius: 3px;\noverflow: hidden;\nheight: 50px;\nmargin-top:50px;\nmargin-right: auto;\nmargin-left: auto;\n`;\n\nexport const FormBtn = styled.button`\ndisplay: inline-block;\nwidth: 48px;\nheight: 48px;\nborder: 0;\nbackground-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/2048px-Search_Icon.svg.png');\nbackground-size: 40%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n`;\n\nexport const Input = styled.input`  \ndisplay: inline-block;\nwidth: 100%;\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\n`;","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { getFindFilm } from \"../services/Api/getFilms\"\nimport PropTypes from 'prop-types';\nimport { Form, FormBtn, Input, } from \"./styled\";\n\n\nconst SearchBar = ({ setMovies }) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [search, setSearch] = useState(() => searchParams.get('query') ?? '');\n    const {\n        register,\n        handleSubmit,\n        reset,\n    } = useForm({ defaultValues: { search: '' } });\n\n    const onSubmit = ({ search }) => {\n        setSearch(search);\n        setSearchParams({ query: search });\n        reset();\n    };\n\n    useEffect(() => {\n        if (!search) return;\n\n        async function getFilmsByName(search) {\n            try {\n                const { data } = await getFindFilm(search);\n                console.log(data.results);\n                if (data.results.length === 0) {\n                    alert(`Sorry, not movie ${search} in database...`);\n                }\n                setMovies(data.results);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getFilmsByName(search);\n    }, [search, setMovies]);\n\n    return (\n        <>\n            <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <FormBtn type=\"submit\" />\n                <Input\n                    {...register('search', { required: 'This field is required' })}\n                    placeholder=\"Search movie\"\n                    autoFocus\n                />\n            </Form>\n        </>\n    );\n};\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport default SearchBar;","import { useState } from 'react';\nimport { Main } from './styled';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { TrendFilms } from 'components/TrendList/TrendList';\n\nconst Movie = () => {\n    const [movies, setMovies] = useState(null);\n\n    return (\n        <>\n            <Main>\n                <SearchBar\n                    setMovies={setMovies}\n                />\n                {movies && <TrendFilms movies={movies} />}\n            </Main>\n        </>\n    )\n};\nexport default Movie;\n"],"names":["Poster","styled","Title","TrendListItem","film","title","poster_path","src","contentURL","alt","MovieList","ListItem","IdLink","Link","TrendFilms","movies","location","useLocation","length","map","to","id","state","from","KEY","LANGUAGE","instance","axios","baseURL","getTrendFilms","page","get","data","status","Error","statusText","console","log","getFindFilm","searchQ","getFilmInfo","idFilm","getFilmCredits","getFilmReviews","Main","Form","FormBtn","Input","setMovies","useSearchParams","searchParams","setSearchParams","useState","search","setSearch","useForm","defaultValues","register","handleSubmit","reset","useEffect","results","alert","getFilmsByName","onSubmit","query","autoComplete","type","required","placeholder","autoFocus"],"sourceRoot":""}