{"version":3,"file":"static/js/284.c14d13af.chunk.js","mappings":"qNAGaA,EAAWC,EAAAA,EAAAA,GAAH,0EAKRC,GAASD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,uQAYNG,EAASH,EAAAA,EAAAA,IAAH,yDAKNI,EAAQJ,EAAAA,EAAAA,EAAH,yD,SCtBLK,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,YAAaC,EAAOH,EAAPG,GAC5B,OACI,+BACI,SAACV,EAAD,WACI,UAACE,EAAD,CAAQS,GAAE,iBAAYD,GAAtB,WACI,SAACN,EAAD,CAAQQ,IAAKC,EAAAA,GAAaJ,EAAaK,IAAKN,KAC5C,SAACH,EAAD,UAAQG,QAHDE,IAQ1B,C,uNCbKK,EAAM,mCACNC,EAAW,KAEJH,EAAU,kCACjBI,EAAWC,EAAAA,EAAAA,OAAa,CAC1BC,QAAS,iCAGN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAA6BC,EAA7B,+BAAoC,EAApC,kBAEoBJ,EAASK,IAAT,uCACiBP,EADjB,iBAC6BM,EAD7B,qBAC8CL,IAHlE,UAKqB,OAHdT,EAFP,QAKUgB,OALV,yCAKiChB,GALjC,aAMO,IAAIiB,MAAMjB,EAAKkB,YANtB,kCAQCC,QAAQC,IAAR,MARD,kFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,4FAAoCR,EAApC,+BAA2C,EAA3C,kBAEoBJ,EAASK,IAAT,gCACUP,EADV,kBACuBc,EADvB,iBACuCR,EADvC,qBACwDL,IAH5E,UAKqB,OAHdT,EAFP,QAKUgB,OALV,yCAKiChB,GALjC,aAMO,IAAIiB,MAAMjB,EAAKkB,YANtB,kCAQCC,QAAQC,IAAR,MARD,kFAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEoBd,EAASK,IAAT,iBACLS,EADK,oBACahB,EADb,qBAC6BC,IAHjD,UAKqB,OAHdT,EAFP,QAKUgB,OALV,yCAKiChB,GALjC,aAMO,IAAIiB,MAAMjB,EAAKkB,YANtB,gCAQCC,QAAQC,IAAR,MARD,gFAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBd,EAASK,IAAT,iBACLS,EADK,4BACqBhB,IAHzC,UAKqB,OAHdR,EAFP,QAKUgB,OALV,yCAKiChB,GALjC,aAMO,IAAIiB,MAAMjB,EAAKkB,YANtB,gCAQCC,QAAQC,IAAR,MARD,gFAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,gGAEoBd,EAASK,IAAT,iBACLS,EADK,4BACqBhB,IAHzC,UAKqB,OAHdR,EAFP,QAKUgB,OALV,yCAKiChB,GALjC,aAMO,IAAIiB,MAAMjB,EAAKkB,YANtB,gCAQCC,QAAQC,IAAR,MARD,gF,4JCxDMO,EAAOjC,EAAAA,EAAAA,KAAH,0IAIJkC,EAAYlC,EAAAA,EAAAA,GAAH,gH,SC2BtB,EA3BiB,WACb,OAA0BmC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,gHAE+BnB,EAAAA,EAAAA,MAF/B,gBAEgBb,EAFhB,EAEgBA,KACR+B,EAAS/B,EAAKiC,SAHtB,gDAKQd,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZc,EACH,GAAE,KAGC,SAACP,EAAD,WACI,SAAC,EAAD,UACKG,EAAMK,KAAI,SAAAC,GAAI,OACX,SAACR,EAAA,EAAD,CACI5B,KAAMoC,GAFC,OAQ9B,C","sources":["components/TrendList/styled.js","components/TrendList/TrendList.jsx","components/services/Api/getFilms.js","pages/HomePage/styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const ListItem = styled.li`\n  box-shadow: 1px 7px 63px 0px rgba(0,0,0,0.75);\n`;\n\n\nexport const IdLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(48,29,145,0.55);\n  border-radius: 7px;\n  box-shadow: 1px 7px 63px 0px rgba(0,0,0,0.75);\n`;\n\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Title = styled.p`\ncolor: white;\nfont-size: 25px;\n`;","import { contentURL } from \"components/services/Api/getFilms\";\nimport { ListItem, Poster, Title, IdLink } from \"./styled\";\n\nexport const TrendListItem = ({ data }) => {\n    const { title, poster_path, id } = data;\n    return (\n        <>\n            <ListItem key={id}>\n                <IdLink to={`/movie/${id}`}>\n                    <Poster src={contentURL + poster_path} alt={title} />\n                    <Title>{title}</Title>\n                </IdLink>\n            </ListItem>\n        </>\n    )\n};","import axios from \"axios\";\n\nconst KEY = '915249618afd956764505d155ff11f97';\nconst LANGUAGE = 'uk';\n\nexport const contentURL = `https://image.tmdb.org/t/p/w500`;\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function getTrendFilms(page = 1) {\n    try {\n        const data = await instance.get(\n            `/trending/movie/week?api_key=${KEY}&page=${page}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFindFilm(searchQ, page = 1) {\n    try {\n        const data = await instance.get(\n            `/search/movie?api_key=${KEY}&query=${searchQ}&page=${page}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFilmInfo(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}?api_key=${KEY}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error)\n    }\n};\n\nexport async function getFilmCredits(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}/credits?api_key=${KEY}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFilmReviews(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}/reviews?api_key=${KEY}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n}","import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\nbackground-image: linear-gradient(225deg, rgb(105, 113, 211) 0%, rgb(120, 75, 160) 50%, rgb(42, 120, 171) 100%);\n`;\n\nexport const TrendList = styled.ul`\ngap: 30px;\npadding: 30px;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\n`;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { getTrendFilms } from \"components/services/Api/getFilms\";\nimport { TrendListItem } from \"components/TrendList/TrendList\";\nimport { TrendList, Main } from \"./styled\";\n\nconst HomePage = () => {\n    const [films, setFilms] = useState([]);\n    useEffect(() => {\n        async function getData() {\n            try {\n                const { data } = await getTrendFilms();\n                setFilms(data.results);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getData();\n    }, []);\n\n    return (\n        <Main>\n            <TrendList>\n                {films.map(film => (\n                    <TrendListItem\n                        data={film}\n                    />\n                ))}\n            </TrendList>\n        </Main>\n    )\n};\n\nexport default HomePage;"],"names":["ListItem","styled","IdLink","Link","Poster","Title","TrendListItem","data","title","poster_path","id","to","src","contentURL","alt","KEY","LANGUAGE","instance","axios","baseURL","getTrendFilms","page","get","status","Error","statusText","console","log","getFindFilm","searchQ","getFilmInfo","idFilm","getFilmCredits","getFilmReviews","Main","TrendList","useState","films","setFilms","useEffect","results","getData","map","film"],"sourceRoot":""}