{"version":3,"file":"static/js/964.7ed650c8.chunk.js","mappings":"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","sources":["components/TrendList/styled.js","components/TrendList/TrendList.jsx","components/services/Api/getFilms.js","components/SearchBar/styled.js","components/SearchBar/SearchBar.jsx","pages/MoviePage/styled.js","pages/MoviePage/MoviesPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const ListItem = styled.li`\n  box-shadow: 1px 7px 63px 0px rgba(0,0,0,0.75);\n`;\n\n\nexport const IdLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(48,29,145,0.55);\n  border-radius: 7px;\n  box-shadow: 1px 7px 63px 0px rgba(0,0,0,0.75);\n`;\n\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Title = styled.p`\ncolor: white;\nfont-size: 25px;\n`;","import { contentURL } from \"components/services/Api/getFilms\";\nimport { ListItem, Poster, Title, IdLink } from \"./styled\";\n\nexport const TrendListItem = ({ data }) => {\n    const { title, poster_path, id } = data;\n    return (\n        <>\n            <ListItem key={id}>\n                <IdLink to={`/movie/${id}`}>\n                    <Poster src={contentURL + poster_path} alt={title} />\n                    <Title>{title}</Title>\n                </IdLink>\n            </ListItem>\n        </>\n    )\n};","import axios from \"axios\";\n\nconst KEY = '915249618afd956764505d155ff11f97';\nconst LANGUAGE = 'uk';\n\nexport const contentURL = `https://image.tmdb.org/t/p/w500`;\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function getTrendFilms(page = 1) {\n    try {\n        const data = await instance.get(\n            `/trending/movie/week?api_key=${KEY}&page=${page}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFindFilm(searchQ, page = 1) {\n    try {\n        const data = await instance.get(\n            `/search/movie?api_key=${KEY}&query=${searchQ}&page=${page}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFilmInfo(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}?api_key=${KEY}&language=${LANGUAGE}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error)\n    }\n};\n\nexport async function getFilmCredits(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}/credits?api_key=${KEY}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport async function getFilmReviews(idFilm) {\n    try {\n        const data = await instance.get(\n            `/movie/${idFilm}/reviews?api_key=${KEY}`\n        );\n        if (data.status === 200) return data;\n        throw new Error(data.statusText);\n    } catch (error) {\n        console.log(error);\n    }\n}","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 600px;\nbackground-color: #fff;\nborder-radius: 3px;\noverflow: hidden;\nmargin-top: 25px;\nheight: 50px;\n`;\n\nexport const FormBtn = styled.button`\ndisplay: inline-block;\nwidth: 48px;\nheight: 48px;\nborder: 0;\nbackground-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/2048px-Search_Icon.svg.png');\nbackground-size: 40%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n`;\n\nexport const Input = styled.input`  \ndisplay: inline-block;\nwidth: 100%;\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\n`;","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Form, FormBtn, Input } from \"./styled\";\nimport { useSearchParams } from \"react-router-dom\";\n\n\nexport const SearchBar = ({ onSubmit = () => { } }) => {\n    const [searchParams, setSearchParams] = useSearchParams()\n    const [search, setSearch] = useState(() => searchParams.get('query') ?? '');\n\n\n    const onChange = e => setSearch(e.currentTarget.value);\n\n    const handlerSubmit = e => {\n        e.preventDefault();\n        onSubmit(search);\n        setSearch('');\n        setSearchParams({ query: search });\n    };\n\n    return (\n        <>\n            <Form onSubmit={handlerSubmit}>\n                <FormBtn type=\"submit\" />\n                <Input\n                    value={search}\n                    name=\"search\"\n                    onChange={onChange}\n                    type=\"text\"\n                    autocomplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                />\n            </Form>\n        </>\n    );\n};\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\nbackground-image: linear-gradient(225deg, rgb(105, 113, 211) 0%, rgb(120, 75, 160) 50%, rgb(42, 120, 171) 100%);\nwidth: 100%;\nmin-height: 100vh;\nflex-direction: column;\ndisplay: flex;\nalign-items: center;\n`;\n\nexport const TrendList = styled.ul`\ngap: 30px;\npadding: 30px;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\n`;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { TrendListItem } from \"components/TrendList/TrendList\";\nimport { getFindFilm } from \"components/services/Api/getFilms\";\nimport { TrendList } from \"./styled\";\nimport { Main } from \"./styled\";\n\nexport const MoviesPage = () => {\n    const [films, setFilms] = useState([]);\n    const [searchParams] = useSearchParams();\n\n    const keyWord = searchParams.get('query') ?? '';\n    useEffect(() => {\n        if (!keyWord) return;\n        async function getFilms(searchQ) {\n            try {\n                const { data } = await getFindFilm(searchQ);\n\n                setFilms(data.results);\n            } catch (error) {\n                console.log(error);\n            }\n\n        }\n        getFilms(keyWord);\n\n    }, [keyWord]);\n\n    return (\n        <>\n            <Main>\n                <SearchBar\n                />\n                <TrendList>\n                    {films.map(film => (\n                        <TrendListItem\n                            data={film}\n                        />\n                    ))}\n                </TrendList>\n            </Main>\n        </>\n    )\n};\n\n\nexport default MoviesPage;"],"names":["ListItem","styled","IdLink","Link","Poster","Title","TrendListItem","data","title","poster_path","id","to","src","contentURL","alt","KEY","LANGUAGE","instance","axios","baseURL","getTrendFilms","page","get","status","Error","statusText","console","log","getFindFilm","searchQ","getFilmInfo","idFilm","getFilmCredits","getFilmReviews","Form","FormBtn","Input","SearchBar","onSubmit","useSearchParams","searchParams","setSearchParams","useState","search","setSearch","e","preventDefault","query","type","value","name","onChange","currentTarget","autocomplete","autoFocus","placeholder","Main","TrendList","MoviesPage","films","setFilms","keyWord","useEffect","results","getFilms","map","film"],"sourceRoot":""}